import bot from "..";
import { ApplicationData } from "../../types/Application";
import { Role } from "../../types/UserSchema";
import { start } from "../keyboards/start";

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä—É —Å –¥–∞–Ω–Ω—ã–º–∏ –∑–∞—è–≤–∫–∏.
 *
 * @param {Object} params
 * @param {number} params.chat_id - ID —á–∞—Ç–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞.
 * @param {string} params.domain - –î–æ–º–µ–Ω –∫–æ–º–ø–∞–Ω–∏–∏.
 * @param {Omit<IApplication, "createdAt" | "updatedAt">} params.data - –î–∞–Ω–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∑–∞—è–≤–∫–∏.
 * @returns {Promise<{ success: boolean; message?: string }>}
 */
export async function sendTestMessage({
  chat_id,
  domain,
  data,
}: {
  chat_id: number;
  domain: string;
  data: ApplicationData;
}): Promise<{ success: boolean; message?: string }> {
  if (!chat_id) {
    return { success: false, message: "–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è." };
  }

  // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–ª–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —É—á—ë—Ç–æ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª–µ–π
  const parts: string[] = [
    `üîî <b>–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–∞!</b>`,
    `–í–∞—à –¥–æ–º–µ–Ω <b>${domain}</b> –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω.`,
    "",
    `üìã <b>–î–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏:</b>`,
  ];

  if (data.name) parts.push(`üë§ –ò–º—è: ${data.name}`);
  if (data.phone) parts.push(`üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${data.phone}`);
  if (data.post) parts.push(`üíº –î–æ–ª–∂–Ω–æ—Å—Ç—å: ${data.post}`);
  if (data.address) parts.push(`üè¢ –ê–¥—Ä–µ—Å: ${data.address}`);
  if (data.message) parts.push(`üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: ${data.message}`);
  if (data.file) parts.push(`üìé –§–∞–π–ª: –í —Ç–µ—Å—Ç–æ–≤–æ–º –æ—Ç—Å—É—Å—Ç–≤—É–µ—Ç`);

  parts.push(
    "",
    `‚ÑπÔ∏è –ù–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–º —Ç–∞—Ä–∏—Ñ–µ –¥–æ—Å—Ç—É–ø–Ω–æ 10 –∑–∞—è–≤–æ–∫ –≤ –º–µ—Å—è—Ü.`,
    `(–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–µ —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è).`
  );

  const directorMessage = parts.join("\n");

  try {
    await bot.telegram.sendMessage(chat_id, directorMessage, {
      parse_mode: "HTML",
      ...start.auth.director,
    });

    return { success: true };
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", error);
    return {
      success: false,
      message: "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.",
    };
  }
}
