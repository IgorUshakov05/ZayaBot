import { Context, Markup } from "telegraf";
import { start } from "../keyboards/start";
import { checkUserRole } from "../../database/request/User";
import { Role } from "../../types/UserSchema";
import path from "path";
const command_start = async (ctx: Context & { chat: { id: number } }) => {
  const user_check = await checkUserRole({ chat_id: ctx.chat.id });

  if (!user_check.success) {
    // –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –∏–ª–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    return ctx.reply(user_check.message);
  }

  if (user_check.newUser) {
    const message = `
üëã <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ CRM-–±–æ—Ç ‚Äî ZayaBot!</b>  

–ú—ã ‚Äî –≤–∞—à <i>–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã —Å –∑–∞—è–≤–∫–∞–º–∏ —Å —Å–∞–π—Ç–∞!</i> üöÄ  
–ù–∞—à –±–æ—Ç –ø–æ–º–æ–≥–∞–µ—Ç –±–∏–∑–Ω–µ—Å—É –ª–µ–≥–∫–æ —Å–æ–±–∏—Ä–∞—Ç—å, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∑–∞—è–≤–∫–∏, —á—Ç–æ–±—ã –≤—ã –º–æ–≥–ª–∏ —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á–∏—Ç—å—Å—è –Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞—Ö, –∞ –Ω–µ –Ω–∞ —Ä—É—Ç–∏–Ω–µ.  

üîë <b>–ß—Ç–æ –º—ã —É–º–µ–µ–º:</b>
üì¨ <b>–°–æ–±–∏—Ä–∞–µ–º –∑–∞—è–≤–∫–∏:</b> –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –≤–∞—à —Å–∞–π—Ç –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –∑–∞—è–≤–∫–∏ –ø—Ä—è–º–æ –≤ Telegram. –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞ ‚Äî –±–µ—Å–ø–ª–∞—Ç–Ω–æ!  
üë• <b>–£–ø—Ä–∞–≤–ª—è–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º–∏:</b> –ù–∞–∑–Ω–∞—á–∞–π—Ç–µ —Ä–æ–ª–∏, –ø—Ä–∞–≤–∞ –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∫–æ–º–∞–Ω–¥—ã.  
üí∏ <b>–ì–∏–±–∫–∏–µ —Ç–∞—Ä–∏—Ñ—ã:</b> –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ç–∞—Ä–∏—Ñ (10 –∑–∞—è–≤–æ–∫/–º–µ—Å—è—Ü) –∏–ª–∏ –æ–ø–ª–∞—Ç–∞ –∑–∞ –∑–∞—è–≤–∫—É (10 —Ä—É–±./–∑–∞—è–≤–∫–∞). –í—ã–±–∏—Ä–∞–π—Ç–µ, —á—Ç–æ —É–¥–æ–±–Ω–µ–µ!  
üìä <b>–ê–Ω–∞–ª–∏—Ç–∏–∫–∞:</b> –°–ª–µ–¥–∏—Ç–µ –∑–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –∑–∞—è–≤–æ–∫ –∏ —Ä–∞–±–æ—Ç–æ–π –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏.  
‚öôÔ∏è <b>–ü—Ä–æ—Å—Ç–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è:</b> –î–æ–±–∞–≤—å—Ç–µ –Ω–∞—à—É –±–∏–±–ª–∏–æ—Ç–µ–∫—É –Ω–∞ —Å–∞–π—Ç –∏ –Ω–∞—á–Ω–∏—Ç–µ –∑–∞ –º–∏–Ω—É—Ç—É.
`;

    return await ctx.reply(message, {
      parse_mode: "HTML",
      ...start.notAuth,
    });
  }

  switch (user_check.role) {
    case Role.director:
      if (user_check.test_company) {
        await ctx.reply(user_check.message);
        await ctx.reply(
          `üìå *–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –≤–Ω–µ–¥—Ä–µ–Ω–∏—è!*  
–í–∞—à API-–∫–ª—é—á: \`${user_check.api_key}\`  

–ü–æ—Å–ª–µ –≤–Ω–µ–¥—Ä–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞—è–≤–∫—É –Ω–∞ —Å–∞–π—Ç–µ, —á—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –¥–æ–º–µ–Ω –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã. –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞ ‚Äî –∑–∞ –Ω–∞—à —Å—á—ë—Ç! ‚úÖ  

–¢–∞–∫–∂–µ, –µ—Å–ª–∏ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–æ–º–ø–∞–Ω–∏–∏ –≤—ã –¥–æ–ø—É—Å—Ç–∏–ª–∏ –æ—à–∏–±–∫—É –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –∏–ª–∏ –¥–æ–º–µ–Ω–µ, –≤—ã –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å –∫–æ–º–ø–∞–Ω–∏—é –∏ —Å–æ–∑–¥–∞—Ç—å –µ—ë –∑–∞–Ω–æ–≤–æ. ‚öôÔ∏è`,
          {
            parse_mode: "Markdown",
            ...start.auth.test_company,
          }
        );

        return await ctx.replyWithDocument({
          source: path.join(__filename),
          filename: "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è.pdf",
        });
      }
      // –î–∏—Ä–µ–∫—Ç–æ—Ä —Å –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–π –∫–æ–º–ø–∞–Ω–∏–µ–π ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞
      return ctx.reply(user_check.message, {
        parse_mode: "Markdown",
        ...start.auth.director,
      });

    case Role.manager:
      // –ú–µ–Ω–µ–¥–∂–µ—Ä ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –º–µ–Ω–µ–¥–∂–µ—Ä–∞
      return ctx.reply(
        user_check.message
        // Markup.keyboard([["üìã –ó–∞—è–≤–∫–∏"], ["üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞"]]).resize()
      );

    default:
      // –õ—é–±–∞—è –¥—Ä—É–≥–∞—è —Ä–æ–ª—å
      return ctx.reply(
        "‚ö†Ô∏è –í–∞—à–∞ —Ä–æ–ª—å –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
      );
  }
};

export default command_start;
