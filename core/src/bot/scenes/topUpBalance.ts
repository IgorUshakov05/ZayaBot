import { Markup, Scenes } from "telegraf";
import { create_pay } from "../../payment/payments.methods";
import { PaymentType } from "../../types/UserSchema";

interface TopupState {
  sum?: number;
}

type MyContext = Scenes.WizardContext & {
  wizard: Scenes.WizardContextWizard<MyContext> & {
    state: TopupState;
  };
  message?: { text?: string };
};

// --- Middleware –¥–ª—è –æ—Ç–º–µ–Ω—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è ---
const cancelMiddleware = async (ctx: MyContext): Promise<boolean> => {
  const text = ctx.message?.text;
  if (text === "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ") {
    await ctx.reply(
      "üö´ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ. –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è.",
      Markup.removeKeyboard()
    );
    await ctx.scene.leave();
    return true;
  }
  return false;
};

// --- –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ü–µ–Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ ---
const topupBalanceWizard = new Scenes.WizardScene<MyContext>(
  "topup_balance",

  // –®–∞–≥ 1 ‚Äî –∑–∞–ø—Ä–æ—Å —Å—É–º–º—ã
  async (ctx) => {
    await ctx.reply("üí∞ *–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å:*", {
      parse_mode: "Markdown",
      ...Markup.keyboard([["‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ"]]).resize(),
    });
    return ctx.wizard.next();
  },

  // –®–∞–≥ 2 ‚Äî –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—É–º–º—ã –∏ –ø–µ—Ä–µ—Ö–æ–¥ –∫ –æ–ø–ª–∞—Ç–µ
  async (ctx: any) => {
    if (await cancelMiddleware(ctx)) return;

    const input = ctx.message?.text?.trim() ?? "";
    const sum = Number(input);

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ —á–∏—Å–ª–∞
    if (!Number.isFinite(sum) || sum <= 0) {
      await ctx.reply("‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 100).");
      return;
    }

    if (sum < 100) {
      await ctx.reply("‚ö†Ô∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è ‚Äî 100 —Ä—É–±.");
      return;
    }
    if (sum > 150000) {
      await ctx.reply("‚ö†Ô∏è –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è ‚Äî 150 000 —Ä—É–±.");
      return;
    }

    ctx.wizard.state.sum = sum;

    await ctx.reply(
      `‚úÖ –í—ã —É–∫–∞–∑–∞–ª–∏ —Å—É–º–º—É *${sum} —Ä—É–±.*  
–¢–µ–ø–µ—Ä—å —Å–æ–∑–¥–∞—ë—Ç—Å—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É...`,
      {
        parse_mode: "Markdown",
        ...Markup.removeKeyboard(),
      }
    );

    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –≤—Å—Ç–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Å—ã–ª–∫–∏ —á–µ—Ä–µ–∑ YooKassa API:
    const { success, payment, message } = await create_pay(
      sum,
      ctx.chat.id,
      PaymentType.PER_REQUEST
    );
    console.log(payment);
    if (!success) {
      await ctx.reply(message, Markup.removeKeyboard());
      return ctx.scene.leave();
    }
    await ctx.reply(
      `üí≥ –ü–µ—Ä–µ–π–¥–∏—Ç–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã:`,
      Markup.inlineKeyboard([
        [
          Markup.button.url(
            `–û–ø–ª–∞—Ç–∏—Ç—å ${sum} ‚ÇΩ`,
            payment?.confirmation.confirmation_url
          ),
        ],
      ])
    );

    return ctx.scene.leave();
  }
);

export default topupBalanceWizard;
